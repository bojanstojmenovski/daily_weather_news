{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx\";\nimport React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const {\n    calculatedStats\n  } = useContext(WeatherData);\n  console.log(calculatedStats);\n  const {\n    temperature,\n    humidity,\n    warmestTime,\n    coldestTime\n  } = calculatedStats;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statistics-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Statistics of the day\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Please enter a city in the Search bar to see the Daily Statistics\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statisticsResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"MAX TEMP: $\", calculatedStats.temperature.max, \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"MAX HUMD: $\", calculatedStats.humidity.max, \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"AVG TEMP: $\", calculatedStats.temperature.avg.toFixed(2), \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"AVG HUMD: $\", calculatedStats.humidity.avg.toFixed(2), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"MIN TEMP: $\", calculatedStats.temperature.min, \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"MIN HUMD: $\", calculatedStats.humidity.min, \" %\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Warmest time of the following period: $\", calculatedStats.warmestTime), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Coldest time of the following period: $\", calculatedStats.coldestTime)));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx"],"names":["React","useContext","WeatherData","Statistics","calculatedStats","console","log","temperature","humidity","warmestTime","coldestTime","max","avg","toFixed","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,UAAU,CAACC,WAAD,CAAtC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,QAAM;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,MAAsDN,eAA5D;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcA,eAAe,CAACG,WAAhB,CAA4BI,GAD1C,OADF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcP,eAAe,CAACI,QAAhB,CAAyBG,GADvC,OAJF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcP,eAAe,CAACG,WAAhB,CAA4BK,GAA5B,CAAgCC,OAAhC,CAAwC,CAAxC,CADd,OADF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcT,eAAe,CAACI,QAAhB,CAAyBI,GAAzB,CAA6BC,OAA7B,CAAqC,CAArC,CADd,OAJF,CATF,eAiBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcT,eAAe,CAACG,WAAhB,CAA4BO,GAD1C,OADF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcV,eAAe,CAACI,QAAhB,CAAyBM,GADvC,OAJF,CAjBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC0CV,eAAe,CAACK,WAD1D,CAzBF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC0CL,eAAe,CAACM,WAD1D,CA5BF,CALF,CADF;AAwCD,CA5CD;;AA8CA,eAAeP,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const { calculatedStats } = useContext(WeatherData);\n  console.log(calculatedStats);\n  const { temperature, humidity, warmestTime, coldestTime } = calculatedStats;\n  return (\n    <div className=\"statistics-div\">\n      <h1>Statistics of the day</h1>\n      <p>\n        <i>Please enter a city in the Search bar to see the Daily Statistics</i>\n      </p>\n      <div className=\"statisticsResult\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            MAX TEMP: ${calculatedStats.temperature.max} C\n          </div>\n          <div className=\"col-md-6\">\n            MAX HUMD: ${calculatedStats.humidity.max} %\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            AVG TEMP: ${calculatedStats.temperature.avg.toFixed(2)} C\n          </div>\n          <div className=\"col-md-6\">\n            AVG HUMD: ${calculatedStats.humidity.avg.toFixed(2)} %\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            MIN TEMP: ${calculatedStats.temperature.min} C\n          </div>\n          <div className=\"col-md-6\">\n            MIN HUMD: ${calculatedStats.humidity.min} %\n          </div>\n        </div>\n        <h3>\n          Warmest time of the following period: ${calculatedStats.warmestTime}\n        </h3>\n        <h3>\n          Coldest time of the following period: ${calculatedStats.coldestTime}\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}