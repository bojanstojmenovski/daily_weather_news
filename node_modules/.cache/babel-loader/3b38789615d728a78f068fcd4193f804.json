{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const {\n    calculatedStats\n  } = useContext(WeatherData);\n  console.log(calculatedStats);\n  const [stats, setStats] = useState({\n    stats: calculatedStats\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statistics-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Statistics of the day\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Please enter a city in the Search bar to see the Daily Statistics\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"statisticsResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"MAX TEMP: $\", stats.temperature.max, \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"MAX HUMD: $\", stats.humidity.max, \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"AVG TEMP: $\", stats.temperature.avg.toFixed(2), \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"AVG HUMD: $\", stats.humidity.avg.toFixed(2), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"MIN TEMP: $\", stats.temperature.min, \" C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"MIN HUMD: $\", stats.humidity.min, \" %\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Warmest time of the following period: $\", stats.warmestTime), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Coldest time of the following period: $\", stats.coldestTime)));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx"],"names":["React","useContext","useState","WeatherData","Statistics","calculatedStats","console","log","stats","setStats","temperature","max","humidity","avg","toFixed","min","warmestTime","coldestTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,UAAU,CAACE,WAAD,CAAtC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCM,IAAAA,KAAK,EAAEH;AAD0B,GAAD,CAAlC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADF,CAFF,eAKE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCG,KAAK,CAACE,WAAN,CAAkBC,GAAxD,OADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCH,KAAK,CAACI,QAAN,CAAeD,GAArD,OAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcH,KAAK,CAACE,WAAN,CAAkBG,GAAlB,CAAsBC,OAAtB,CAA8B,CAA9B,CADd,OADF,eAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcN,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBC,OAAnB,CAA2B,CAA3B,CADd,OAJF,CALF,eAaE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCN,KAAK,CAACE,WAAN,CAAkBK,GAAxD,OADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCP,KAAK,CAACI,QAAN,CAAeG,GAArD,OAFF,CAbF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAA4CP,KAAK,CAACQ,WAAlD,CAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAA4CR,KAAK,CAACS,WAAlD,CAlBF,CALF,CADF;AA4BD,CApCD;;AAsCA,eAAeb,UAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const { calculatedStats } = useContext(WeatherData);\n  console.log(calculatedStats);\n\n  const [stats, setStats] = useState({\n    stats: calculatedStats,\n  });\n\n  return (\n    <div className=\"statistics-div\">\n      <h1>Statistics of the day</h1>\n      <p>\n        <i>Please enter a city in the Search bar to see the Daily Statistics</i>\n      </p>\n      <div id=\"statisticsResult\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">MAX TEMP: ${stats.temperature.max} C</div>\n          <div className=\"col-md-6\">MAX HUMD: ${stats.humidity.max} %</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            AVG TEMP: ${stats.temperature.avg.toFixed(2)} C\n          </div>\n          <div className=\"col-md-6\">\n            AVG HUMD: ${stats.humidity.avg.toFixed(2)} %\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">MIN TEMP: ${stats.temperature.min} C</div>\n          <div className=\"col-md-6\">MIN HUMD: ${stats.humidity.min} %</div>\n        </div>\n        <h3>Warmest time of the following period: ${stats.warmestTime}</h3>\n        <h3>Coldest time of the following period: ${stats.coldestTime}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}