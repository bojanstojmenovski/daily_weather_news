{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/weather_app_react/src/components/Search.jsx\";\nimport React from \"react\";\nimport fetchData from \"../utils\"; // import calculateStatistics from \"../utils\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchInputRef = React.createRef();\n    this.state = {\n      weatherData: {}\n    };\n  }\n\n  async onSearchCity(city) {\n    let data = await fetchData(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`);\n    this.setState({\n      weatherData: data\n    });\n    console.log(data);\n    calculateStatistics(data);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchFormDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline my-2 my-lg-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"citySearchInput\",\n      className: \"form-control mr-sm-2\",\n      type: \"search\",\n      placeholder: \"Enter City Here\",\n      \"aria-label\": \"City\",\n      ref: input => this.searchInputRef = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"citySearchBtn\",\n      type: \"button\",\n      className: \"btn btn-outline-light my-2 my-sm-0\",\n      onClick: () => this.onSearchCity(this.searchInputRef.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Search\")));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/bojan/Desktop/weather_app_react/src/components/Search.jsx"],"names":["React","fetchData","Search","Component","constructor","props","searchInputRef","createRef","state","weatherData","onSearchCity","city","data","setState","console","log","calculateStatistics","render","input","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CACA;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAQnBC,cARmB,GAQFN,KAAK,CAACO,SAAN,EARE;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAID,QAAMC,YAAN,CAAmBC,IAAnB,EAAyB;AACvB,QAAIC,IAAI,GAAG,MAAMX,SAAS,CACvB,sDAAqDU,IAAK,sDADnC,CAA1B;AAGA,SAAKE,QAAL,CAAc;AACZJ,MAAAA,WAAW,EAAEG;AADD,KAAd;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,IAAAA,mBAAmB,CAACJ,IAAD,CAAnB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,oBAAW,MALb;AAME,MAAA,GAAG,EAAGC,KAAD,IAAY,KAAKZ,cAAL,GAAsBY,KANzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,oCAHZ;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKR,YAAL,CAAkB,KAAKJ,cAAL,CAAoBa,KAAtC,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF,CADF;AAsBD;;AA7CkC;;AAgDrC,eAAejB,MAAf","sourcesContent":["import React from \"react\";\nimport fetchData from \"../utils\";\n// import calculateStatistics from \"../utils\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: {},\n    };\n  }\n\n  searchInputRef = React.createRef();\n\n  async onSearchCity(city) {\n    let data = await fetchData(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`\n    );\n    this.setState({\n      weatherData: data,\n    });\n    console.log(data);\n    calculateStatistics(data);\n  }\n\n  render() {\n    return (\n      <div className=\"searchFormDiv\">\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            id=\"citySearchInput\"\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Enter City Here\"\n            aria-label=\"City\"\n            ref={(input) => (this.searchInputRef = input)}\n          />\n          <button\n            id=\"citySearchBtn\"\n            type=\"button\"\n            className=\"btn btn-outline-light my-2 my-sm-0\"\n            onClick={() => this.onSearchCity(this.searchInputRef.value)}\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}