{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/daily_weather_news/src/utilities/WeatherData.js\";\nimport React, { Component, createContext } from \"react\";\nimport fetchData from \"./fetchData\";\nimport calculateStats from \"./calculateStats\";\nexport const WeatherData = createContext();\n\nclass WeatherDataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchCity = async city => {\n      let data = await fetchData(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`);\n      this.setState({\n        weatherData: data,\n        calculatedStatistics: calculateStats(data),\n        city: data.city.name\n      });\n      console.log(this.state.weatherData);\n      console.log(this.state.calculatedStatistics);\n      console.log(this.state.city);\n    };\n\n    this.state = {\n      weatherData: {},\n      calculatedStatistics: {},\n      city: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(WeatherData.Provider, {\n      value: {\n        weatherData: this.state.weatherData,\n        calculatedStats: this.state.calculatedStatistics,\n        searchCity: this.onSearchCity,\n        searchInputRef: this.serchInput,\n        searchBtnRef: this.searchButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default WeatherDataProvider;","map":{"version":3,"sources":["/Users/bojan/Desktop/daily_weather_news/src/utilities/WeatherData.js"],"names":["React","Component","createContext","fetchData","calculateStats","WeatherData","WeatherDataProvider","constructor","props","onSearchCity","city","data","setState","weatherData","calculatedStatistics","name","console","log","state","render","calculatedStats","searchCity","searchInputRef","serchInput","searchBtnRef","searchButton","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;;AAEP,MAAMI,mBAAN,SAAkCL,SAAlC,CAA4C;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAOC,IAAP,IAAgB;AAC7B,UAAIC,IAAI,GAAG,MAAMR,SAAS,CACvB,sDAAqDO,IAAK,sDADnC,CAA1B;AAGA,WAAKE,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,IADD;AAEZG,QAAAA,oBAAoB,EAAEV,cAAc,CAACO,IAAD,CAFxB;AAGZD,QAAAA,IAAI,EAAEC,IAAI,CAACD,IAAL,CAAUK;AAHJ,OAAd;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,WAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,oBAAvB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWR,IAAvB;AACD,KAvBkB;;AAGjB,SAAKQ,KAAL,GAAa;AACXL,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,oBAAoB,EAAE,EAFX;AAGXJ,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAiBDS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,WAAW,EAAE,KAAKK,KAAL,CAAWL,WADnB;AAELO,QAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWJ,oBAFvB;AAGLO,QAAAA,UAAU,EAAE,KAAKZ,YAHZ;AAILa,QAAAA,cAAc,EAAE,KAAKC,UAJhB;AAKLC,QAAAA,YAAY,EAAE,KAAKC;AALd,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKjB,KAAL,CAAWkB,QATd,CADF;AAaD;;AAxCyC;;AA2C5C,eAAepB,mBAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport fetchData from \"./fetchData\";\nimport calculateStats from \"./calculateStats\";\n\nexport const WeatherData = createContext();\n\nclass WeatherDataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: {},\n      calculatedStatistics: {},\n      city: ''\n    };\n  }\n\n\n  onSearchCity = async (city) => {\n    let data = await fetchData(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`\n    );\n    this.setState({\n      weatherData: data,\n      calculatedStatistics: calculateStats(data),\n      city: data.city.name,\n    });\n    console.log(this.state.weatherData);\n    console.log(this.state.calculatedStatistics);\n    console.log(this.state.city)\n  };\n\n  render() {\n    return (\n      <WeatherData.Provider\n        value={{\n          weatherData: this.state.weatherData,\n          calculatedStats: this.state.calculatedStatistics,\n          searchCity: this.onSearchCity,\n          searchInputRef: this.serchInput,\n          searchBtnRef: this.searchButton,\n        }}\n      >\n        {this.props.children}\n      </WeatherData.Provider>\n    );\n  }\n}\n\nexport default WeatherDataProvider;\n"]},"metadata":{},"sourceType":"module"}