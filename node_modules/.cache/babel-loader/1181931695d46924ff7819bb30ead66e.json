{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/daily_weather_news/src/components/Statistics.jsx\";\nimport React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const {\n    weatherData,\n    calculatedStats\n  } = useContext(WeatherData);\n  const {\n    temperature,\n    humidity,\n    warmestTime,\n    coldestTime\n  } = calculatedStats;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, weatherData.city && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 30\n    }\n  }, \"Statistics of the day for \", weatherData.city.name), !weatherData.city && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Please enter a city in the Search bar to see the Daily Statistics\")), temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, \"Highest temperature: \", temperature.max.toFixed(), \" \\xB0C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"Highest humidity: \", humidity.max.toFixed(), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"Average temperature: \", temperature.avg.toFixed(), \" \\xB0C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Average humidity: \", humidity.avg.toFixed(), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Lowest temperature: \", temperature.min.toFixed(), \" \\xB0C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Lowest humidity: \", humidity.min.toFixed(), \" %\")), warmestTime && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"warmest-period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Warmest time of the following period: \", warmestTime), coldestTime && /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"coldest-period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Coldest time of the following period: \", coldestTime)));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/bojan/Desktop/daily_weather_news/src/components/Statistics.jsx"],"names":["React","useContext","WeatherData","Statistics","weatherData","calculatedStats","temperature","humidity","warmestTime","coldestTime","city","name","max","toFixed","avg","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCJ,UAAU,CAACC,WAAD,CAAnD;AACA,QAAM;AAAEI,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,MAAsDJ,eAA5D;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,CAACM,IAAZ,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA+BN,WAAW,CAACM,IAAZ,CAAiBC,IAAhD,CADzB,EAEG,CAACP,WAAW,CAACM,IAAb,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADsB,CAF1B,EAKGJ,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACwBA,WAAW,CAACM,GAAZ,CAAgBC,OAAhB,EADxB,WAFJ,EAMGN,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6CA,QAAQ,CAACK,GAAT,CAAaC,OAAb,EAA7C,OAPJ,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACwBA,WAAW,CAACQ,GAAZ,CAAgBD,OAAhB,EADxB,WAFJ,EAMGN,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqBA,QAAQ,CAACO,GAAT,CAAaD,OAAb,EADrB,OAPJ,CAXF,eAuBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBA,WAAW,CAACS,GAAZ,CAAgBF,OAAhB,EADvB,WAFJ,EAMGN,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4CA,QAAQ,CAACQ,GAAT,CAAaF,OAAb,EAA5C,OAPJ,CAvBF,EAiCGL,WAAW,iBACV;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyCA,WADzC,CAlCJ,EAsCGC,WAAW,iBACV;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyCA,WADzC,CAvCJ,CANJ,CADF;AAsDD,CAzDD;;AA2DA,eAAeN,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const { weatherData, calculatedStats } = useContext(WeatherData);\n  const { temperature, humidity, warmestTime, coldestTime } = calculatedStats;\n  return (\n    <div className=\"stats-div\">\n      {weatherData.city && ( <h1>Statistics of the day for {weatherData.city.name}</h1> )}\n      {!weatherData.city && ( <p>\n        <i>Please enter a city in the Search bar to see the Daily Statistics</i>\n      </p> )}\n      {temperature && (\n        <div className=\"stats-result\">\n          <div className=\"row\">\n            {temperature && (\n              <div className=\"col-md-6\">\n                Highest temperature: {temperature.max.toFixed()} °C\n              </div>\n            )}\n            {humidity && (\n              <div className=\"col-md-6\">Highest humidity: {humidity.max.toFixed()} %</div>\n            )}\n          </div>\n          <div className=\"row\">\n            {temperature && (\n              <div className=\"col-md-6\">\n                Average temperature: {temperature.avg.toFixed()} °C\n              </div>\n            )}\n            {humidity && (\n              <div className=\"col-md-6\">\n                Average humidity: {humidity.avg.toFixed()} %\n              </div>\n            )}\n          </div>\n          <div className=\"row\">\n            {temperature && (\n              <div className=\"col-md-6\">\n                Lowest temperature: {temperature.min.toFixed()} °C\n              </div>\n            )}\n            {humidity && (\n              <div className=\"col-md-6\">Lowest humidity: {humidity.min.toFixed()} %</div>\n            )}\n          </div>\n          {warmestTime && (\n            <h3 className=\"warmest-period\">\n              Warmest time of the following period: {warmestTime}\n            </h3>\n          )}\n          {coldestTime && (\n            <h3 className=\"coldest-period\">\n              Coldest time of the following period: {coldestTime}\n            </h3>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}; \n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}