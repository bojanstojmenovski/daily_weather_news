{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx\";\nimport React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const {\n    calculatedStats\n  } = useContext(WeatherData);\n  const {\n    temperature,\n    humidity,\n    warmestTime,\n    coldestTime\n  } = calculatedStats;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statistics-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Statistics of the day\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Please enter a city in the Search bar to see the Daily Statistics\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statisticsResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"MAX TEMP: $\", temperature.max, \" C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"MAX HUMD: $\", humidity.max, \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"AVG TEMP: $\", temperature.avg.toFixed(2), \" C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"AVG HUMD: $\", humidity.avg.toFixed(2), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, temperature && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"MIN TEMP: $\", temperature.min, \" C\"), humidity && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"MIN HUMD: $\", humidity.min, \" %\")), warmestTime && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), coldestTime && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Statistics;","map":{"version":3,"sources":["/Users/bojan/Desktop/weather_app_react/src/components/Statistics.jsx"],"names":["React","useContext","WeatherData","Statistics","calculatedStats","temperature","humidity","warmestTime","coldestTime","max","avg","toFixed","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,oBAAP;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,UAAU,CAACC,WAAD,CAAtC;AACA,QAAM;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,WAAzB;AAAsCC,IAAAA;AAAtC,MAAsDJ,eAA5D;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCA,WAAW,CAACI,GAAlD,OAFJ,EAIGH,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCA,QAAQ,CAACG,GAA/C,OALJ,CADF,eASE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcA,WAAW,CAACK,GAAZ,CAAgBC,OAAhB,CAAwB,CAAxB,CADd,OAFJ,EAMGL,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcA,QAAQ,CAACI,GAAT,CAAaC,OAAb,CAAqB,CAArB,CADd,OAPJ,CATF,eAqBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,iBACV;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCA,WAAW,CAACO,GAAlD,OAFJ,EAIGN,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsCA,QAAQ,CAACM,GAA/C,OALJ,CArBF,EA6BGL,WAAW,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAgCGC,WAAW,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,CALF,CADF;AA4CD,CA/CD;;AAiDA,eAAeL,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./css/PageView.css\";\nimport { WeatherData } from \"../utilities/WeatherData\";\n\nconst Statistics = () => {\n  const { calculatedStats } = useContext(WeatherData);\n  const { temperature, humidity, warmestTime, coldestTime } = calculatedStats;\n  return (\n    <div className=\"statistics-div\">\n      <h1>Statistics of the day</h1>\n      <p>\n        <i>Please enter a city in the Search bar to see the Daily Statistics</i>\n      </p>\n      <div className=\"statisticsResult\">\n        <div className=\"row\">\n          {temperature && (\n            <div className=\"col-md-6\">MAX TEMP: ${temperature.max} C</div>\n          )}\n          {humidity && (\n            <div className=\"col-md-6\">MAX HUMD: ${humidity.max} %</div>\n          )}\n        </div>\n        <div className=\"row\">\n          {temperature && (\n            <div className=\"col-md-6\">\n              AVG TEMP: ${temperature.avg.toFixed(2)} C\n            </div>\n          )}\n          {humidity && (\n            <div className=\"col-md-6\">\n              AVG HUMD: ${humidity.avg.toFixed(2)} %\n            </div>\n          )}\n        </div>\n        <div className=\"row\">\n          {temperature && (\n            <div className=\"col-md-6\">MIN TEMP: ${temperature.min} C</div>\n          )}\n          {humidity && (\n            <div className=\"col-md-6\">MIN HUMD: ${humidity.min} %</div>\n          )}\n        </div>\n        {warmestTime && (\n          <h3>{/* Warmest time of the following period: ${warmestTime} */}</h3>\n        )}\n        {coldestTime && (\n          <h3>{/* Coldest time of the following period: ${coldestTime} */}</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}