{"ast":null,"code":"var _jsxFileName = \"/Users/bojan/Desktop/weather_app_react/src/WeatherData.js\";\nimport React, { createContext, Component } from \"react\";\nimport fetchData from \"./fetchData\";\nimport calculateStats from \"./calculateStats\";\nexport const WeatherData = createContext();\n\nclass WeatherDataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      let data = await fetchData(`https://api.openweathermap.org/data/2.5/forecast?q=Skopje&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`);\n      this.setState({\n        weatherData: data,\n        calculatedStatistics: calculateStats(data)\n      });\n      console.log(data);\n      console.log(this.state.calculatedStatistics);\n    };\n\n    this.state = {\n      weatherData: {},\n      calculatedStatistics: {}\n    };\n  } //   onSearchCity = async (city) => {\n  //     let data = await fetchData(\n  //       `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`\n  //     );\n  //     this.setState({\n  //       weatherData: data,\n  //       calculatedStatistics: calculateStats(data),\n  //     });\n  //     console.log(data);\n  //   };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(WeatherData.Provider, {\n      value: {\n        weatherData: this.state.weatherData,\n        calculatedStats: this.state.calculatedStatistics,\n        searchCity: this.onSearchCity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default WeatherDataProvider;","map":{"version":3,"sources":["/Users/bojan/Desktop/weather_app_react/src/WeatherData.js"],"names":["React","createContext","Component","fetchData","calculateStats","WeatherData","WeatherDataProvider","constructor","props","componentDidMount","data","setState","weatherData","calculatedStatistics","console","log","state","render","calculatedStats","searchCity","onSearchCity","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEP,MAAMK,mBAAN,SAAkCJ,SAAlC,CAA4C;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,iBApBmB,GAoBC,YAAY;AAC9B,UAAIC,IAAI,GAAG,MAAMP,SAAS,CACvB,+GADuB,CAA1B;AAGA,WAAKQ,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF,IADD;AAEZG,QAAAA,oBAAoB,EAAET,cAAc,CAACM,IAAD;AAFxB,OAAd;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,oBAAvB;AACD,KA9BkB;;AAGjB,SAAKG,KAAL,GAAa;AACXJ,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,oBAAoB,EAAE;AAFX,KAAb;AAID,GARyC,CAU1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAcAI,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWJ,WADnB;AAELM,QAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWH,oBAFvB;AAGLM,QAAAA,UAAU,EAAE,KAAKC;AAHZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKZ,KAAL,CAAWa,QAPd,CADF;AAWD;;AA7CyC;;AAgD5C,eAAef,mBAAf","sourcesContent":["import React, { createContext, Component } from \"react\";\nimport fetchData from \"./fetchData\";\nimport calculateStats from \"./calculateStats\";\n\nexport const WeatherData = createContext();\n\nclass WeatherDataProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherData: {},\n      calculatedStatistics: {},\n    };\n  }\n\n  //   onSearchCity = async (city) => {\n  //     let data = await fetchData(\n  //       `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`\n  //     );\n  //     this.setState({\n  //       weatherData: data,\n  //       calculatedStatistics: calculateStats(data),\n  //     });\n  //     console.log(data);\n  //   };\n\n  componentDidMount = async () => {\n    let data = await fetchData(\n      `https://api.openweathermap.org/data/2.5/forecast?q=Skopje&units=metric&APPID=a2b4e52032d2ff195e2ec1133387d853`\n    );\n    this.setState({\n      weatherData: data,\n      calculatedStatistics: calculateStats(data),\n    });\n    console.log(data);\n    console.log(this.state.calculatedStatistics);\n  };\n\n  render() {\n    return (\n      <WeatherData.Provider\n        value={{\n          weatherData: this.state.weatherData,\n          calculatedStats: this.state.calculatedStatistics,\n          searchCity: this.onSearchCity,\n        }}\n      >\n        {this.props.children}\n      </WeatherData.Provider>\n    );\n  }\n}\n\nexport default WeatherDataProvider;\n"]},"metadata":{},"sourceType":"module"}